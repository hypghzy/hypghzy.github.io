[{"categories":[],"content":"This article refers to the traditional installation method of cloning the theme locally as Git submodule. It describes how to install, upgrade the theme, and write new articles. While this installation method is still widely used, we recommend to install the theme as Hugo module .\n安装 从头开始创建站点 1$ hugo new site myblog 2$ cd myblog 3$ git init 4$ git submodule add https://github.com/razonyang/hugo-theme-bootstrap themes/hugo-theme-bootstrap 5$ cp -a themes/hugo-theme-bootstrap/exampleSite/* . 6$ hugo mod npm pack 7$ npm install 8$ hugo server 如果你使用的是 Windows，请改用 xcopy .\\themes\\hugo-theme-bootstrap\\exampleSite /E。\n安装到已有站点 1$ cd myblog 2$ git submodule add https://github.com/razonyang/hugo-theme-bootstrap themes/hugo-theme-bootstrap 3$ mkdir config 4$ cp -a themes/hugo-theme-bootstrap/exampleSite/config/* ./config 5$ cp -r themes/hugo-theme-bootstrap/exampleSite/content/about/ \\ 6 themes/hugo-theme-bootstrap/exampleSite/content/archives/ \\ 7 themes/hugo-theme-bootstrap/exampleSite/content/categories/ \\ 8 themes/hugo-theme-bootstrap/exampleSite/content/contact/ \\ 9 themes/hugo-theme-bootstrap/exampleSite/content/offline/ \\ 10 themes/hugo-theme-bootstrap/exampleSite/content/search/ \\ 11 themes/hugo-theme-bootstrap/exampleSite/content/series/ \\ 12 themes/hugo-theme-bootstrap/exampleSite/content/tags/ \\ 13 ./content 14$ hugo mod npm pack 15$ npm install 16$ hugo server 如果你重新克隆仓库，你将需要通过 git submodule update --init --recursive 更新 submodule，或者 git clone --recursive \u0026lt;repo\u0026gt;。\n升级 1$ cd themes/hugo-theme-bootstrap 2$ git fetch 3$ git checkout [version] 4$ cd ../../ 5$ hugo mod npm pack 6$ git add themes/hugo-theme-bootstrap package.json 7$ git commit -m \u0026#39;Upgrade the theme\u0026#39; 将 [version] 替换为最新的版本。所有版本可以通过命令 git tag -l | sort -rV 列出。 你也可以直接使用 master 分支以获取最新的修改。 ","date":"2021-12-04","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/installation/git-submodule/","series":["文档"],"smallImg":"","tags":["安装","升级","Git submodule"],"title":"通过 Git Submodule 安装"},{"categories":[],"content":"This article refers to the modern, up-to-date installation method of installing the theme locally as Hugo module. It describes how to install, upgrade the theme, and write new articles.\nProxy (optional) If you\u0026rsquo;re located at China mainland without VPN, the Hugo module download may fail.\nThere are two proxies for this: GOPROXY.CN and GOPROXY.IO .\n1$ go env -w GOPROXY=https://goproxy.cn,direct or\n1$ go env -w GOPROXY=https://goproxy.io,direct Installation Install a new site from scratch Step 1: Create skeleton site Create and enter new site: 1$ hugo new site my-new-blog 2$ cd my-new-blog Step 2: Turn your new site into a Hugo module: 1$ hugo mod init github.com/me/my-new-blog Step 3: Declare hugo-theme-bootstrap module as a site dependency: 1$ hugo mod get github.com/razonyang/hugo-theme-bootstrap Step 4 (optional): Copy example site content into your site Clone the hugo-theme-bootstrap repo into a temporary directory: 1$ git clone https://github.com/razonyang/hugo-theme-bootstrap /tmp/hugo-theme-bootstrap If you\u0026rsquo;re using Windows, use git clone https://github.com/razonyang/hugo-theme-bootstrap %temp%\\hugo-theme-bootstrap instead.\nCopy example site content: 1$ cp -a /tmp/hugo-theme-bootstrap/exampleSite/* . If you\u0026rsquo;re using Windows, use xcopy %TEMP%\\hugo-theme-bootstrap\\exampleSite /E instead.\nRemove your file config.toml 1rm config.toml Delete the repo from your temporary directory again: 1$ rm -rf /tmp/hugo-theme-bootstrap At the top of your config/_default/config.toml, switch the uncommented theme:\n1# theme = \u0026#34;hugo-theme-bootstrap\u0026#34; # install via git submodule 2theme = \u0026#34;github.com/razonyang/hugo-theme-bootstrap\u0026#34; # install via hugo module Step 5: Pull in dependencies via npm Use node package manager npm to pull in dependencies for this theme: 1$ hugo mod npm pack 2$ npm install Step 6: Preview your site Start hugo\u0026rsquo;s built-in webserver to preview your website: 1$ hugo server Install on an existing site Step 1: Turn your existing site into a Hugo module: 1$ cd my-blog 2$ hugo mod init github.com/me/my-blog Step 2: Declare hugo-theme-bootstrap module as a site dependency: 1$ hugo mod get github.com/razonyang/hugo-theme-bootstrap Step 3 (optional): Copy example site content into your site Clone the hugo-theme-bootstrap repo into a temporary directory: 1$ git clone https://github.com/razonyang/hugo-theme-bootstrap /tmp/ Copy example site configuration and content into your site: 1$ mkdir config 2$ cp -a /tmp/hugo-theme-bootstrap/exampleSite/config/* ./config 3$ cp -r /tmp/hugo-theme-bootstrap/exampleSite/content/about/ \\ 4 /tmp/hugo-theme-bootstrap/exampleSite/content/archives/ \\ 5 /tmp/hugo-theme-bootstrap/exampleSite/content/categories/ \\ 6 /tmp/hugo-theme-bootstrap/exampleSite/content/contact/ \\ 7 /tmp/hugo-theme-bootstrap/exampleSite/content/offline/ \\ 8 /tmp/hugo-theme-bootstrap/exampleSite/content/search/ \\ 9 /tmp/hugo-theme-bootstrap/exampleSite/content/series/ \\ 10 /tmp/hugo-theme-bootstrap/exampleSite/content/tags/ \\ 11 ./content Delete the repo from your temporary directory again: 1$ rm -rf /tmp/hugo-theme-bootstrap/ At the top of your config/_default/config.toml, switch the uncommented theme:\n1# theme = \u0026#34;hugo-theme-bootstrap\u0026#34; # install via git submodule 2theme = \u0026#34;github.com/razonyang/hugo-theme-bootstrap\u0026#34; # install via hugo module Step 4: Pull in dependencies via npm Use node package manager npm to pull in dependencies for this theme: 1$ hugo mod npm pack 2$ npm install Step 5: Preview your site Start hugo\u0026rsquo;s built-in webserver to preview your website: 1$ hugo server Theme Upgrade Invoke hugo’s module get subcommand with the update flag: 1$ cd my-blog 2$ hugo mod get -u github.com/razonyang/hugo-theme-bootstrap Hugo will automatically pull in the latest theme version.\nIf you want to set your module to a certain version inside the hugo-theme-bootstrap theme repo, simply specific the name of the tag representing this version when updating your theme.\nLatest version: .\n1$ hugo mod get -u github.com/razonyang/hugo-theme-bootstrap@version Instead of a version tag, you can also specify a commit hash inside the repo (here: de4a40f) when updating your theme:\n1$ hugo mod get -u github.com/razonyang/hugo-theme-bootstrap@de4a40f ","date":"2022-02-26","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/installation/hugo-module/","series":["Docs"],"smallImg":"","tags":["Installation","Upgrade","Hugo module"],"title":"通过 Hugo Module 安装"},{"categories":null,"content":"The starter template for newbie.\n","date":"0001-01-01","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/installation/starter-template/","series":null,"smallImg":"","tags":null,"title":"Starter Template"},{"categories":[],"content":"默认情况下，使用此主题的站点具有默认字体、颜色和总体外观。但是，默认方案不可能满足所有人的要求，但是不要担心，你可以轻松地覆盖主题默认值，例如调色板颜色、字体、语法高亮。\n背景图片 1# 在亮色和暗色模式下都使用相同的图片 2backgroundImage = [\u0026#39;/images/bg.png\u0026#39;] 3 4# 在亮色和暗色模式下使用对应的图片 5backgroundImage = [\u0026#39;/images/bg-light.png\u0026#39;, \u0026#39;/images/bg-dark.png\u0026#39;] 调色板 HBS 提供了大量的配色：blue、blue-gray、brown、cyan、green、indigo、orange、pink、purple、red、teal、yellow。\n可用的配色 设置面板的调色板选择器是基于 palettes 参数的。\n1palettes = [\u0026#34;blue\u0026#34;, \u0026#34;blue-gray\u0026#34;, \u0026#34;indigo\u0026#34;] 你也可以将 palettes 设置为空数组 [] 以禁用调色板。\n默认配色 1palette = \u0026#34;indigo\u0026#34; 修改默认配色后，需要清理浏览器缓存。\n修改配色 主题的调色板系统基于 CSS 变量，因此，我们可以轻松地为每个调色板自定义颜色。\n1[data-palette=blue] { 2 --#{$variable-prefix}primary: darkblue; 3 --#{$variable-prefix}on-primary: #fff; 4} 在 assets/main/scss/_custom.scss 追加样式后，blue 调色板的颜色将会变成 darkblue。\n字体 Font Family 我们不指定任何字体，所以大部分浏览器将会使用 system-ui 。\n你也可以轻易地使用其他 web 字体，比如 Google Fonts 。我们以 Roboto 字体为例。\n首先，我们导入字体，然后在 assets/main/scss/_custom.scss 覆盖 body-font-family 变量：\n1@import \u0026#39;https://fonts.googleapis.com/css2?family=Roboto\u0026amp;display=swap\u0026#39;; 2:root { 3 --#{$variable-prefix}body-font-family: \u0026#39;Roboto\u0026#39;, sans-serif; 4} 语法高亮 本主题要求以下参数设置为特定值。\nlineNos: true lineNumbersInTable: false noClasses: false 另外可参阅 Configure Highlight 。\n样式 1$ hugo gen chromastyles --style=solarized-dark \u0026gt; assets/main/scss/_highlight.scss 另外可参阅所有支持的样式 。\n图标 1// import { faClock } from \u0026#39;@fortawesome/free-solid-svg-icons\u0026#39;; 2// import { faAddressBook } from \u0026#39;@fortawesome/free-regular-svg-icons\u0026#39;; 3// import { faAmazon, faGoogle } from \u0026#39;@fortawesome/free-brands-svg-icons\u0026#39;; 4 5const icons = [ 6 // faClock, 7 // faAddressBook, 8 // faAmazon, faGoogle, 9]; 10export default icons; ","date":"2021-12-03","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/look-and-feel/","series":["文档"],"smallImg":"","tags":["颜色","调色板","字体","语法高亮","图标"],"title":"观感"},{"categories":["菜单"],"content":"我们预定义了两种类型的菜单：main 和 footer，分别表示顶部的应用程序栏菜单和页脚菜单。 本文将简要介绍如何使用菜单。\n菜单项属性 属性 类型 描述 name String 菜单名称。 identifier String 菜单 ID。 weight Number 菜单的权重，用于升序排序。 parent String 上级菜单的 identifier。 url String 菜单的 URL。 pre String 菜单名称的前置字符串。 post String 菜单名称的拖尾字符串。 params Object 菜单参数。 params.divider Boolean true 表示分隔符。 请参阅 Menu Entry Properties 。\n用法 配置 菜单配置文件默认放在 config/_default/menu.toml。\n让我们以 main 菜单为例：\n1[[main]] 2 name = \u0026#34;FooBar\u0026#34; 3 identifier = \u0026#34;foobar\u0026#34; 4 weight = 1 5 pre = \u0026#39;\u0026lt;i class=\u0026#34;fas fa-fw fa-chevron-circle-down\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39; 6[[main]] 7 name = \u0026#34;Foo\u0026#34; 8 identifier = \u0026#34;foo\u0026#34; 9 parent = \u0026#34;foobar\u0026#34; 10 url = \u0026#34;https://github.com/razonyang/hugo-theme-bootstrap\u0026#34; 11 weight = 1 12[[main]] 13 parent = \u0026#34;foobar\u0026#34; 14 identifier = \u0026#34;foobar-divider\u0026#34; 15 weight = 2 16 [main.params] 17 divider = true 18[[main]] 19 name = \u0026#34;Bar\u0026#34; 20 identifier = \u0026#34;bar\u0026#34; 21 parent = \u0026#34;foobar\u0026#34; 22 url = \u0026#34;https://github.com/razonyang/hugo-theme-bootstrap/discussions/new\u0026#34; 23 weight = 3 如图所示，我们创建一个名为 foobar 的顶级菜单，其包含了子菜单和分隔符。\nFront Matter 我们也可以通过页面的 Front Matter 配置菜单。\n1[menu.main] 2 parent = \u0026#34;support\u0026#34; 3 weight = 6 4[menu.footer] 5 parent = \u0026#34;support\u0026#34; 6 weight = 6 7 pre = \u0026#39;\u0026lt;i class=\u0026#34;fas fa-fw fa-question-circle\u0026#34;\u0026gt;\u0026lt;/i\u0026gt;\u0026#39; 代码片段将页面追加到 main 和 footer 菜单。\n不需要指定 url 和 name 参数。\n","date":"2021-12-16","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/menu/","series":["文档"],"smallImg":"","tags":["主菜单","页脚菜单"],"title":"菜单"},{"categories":[],"content":"Main Sections mainSections 参数用于过滤页面，默认为 [\u0026quot;posts\u0026quot;, \u0026quot;docs\u0026quot;]。\n1mainSections = [\u0026#34;blog\u0026#34;, \u0026#34;posts\u0026#34;, \u0026#34;docs\u0026#34;, \u0026#34;notes\u0026#34;] 内容类型 你可能想在其他 Section 中使用 docs 布局，比如 /notes。这可以通过在 front matter 中设置 type = \u0026quot;docs\u0026quot; 实现。\n文章原型 我们也可以为 notes 创建一个原型，让 Hugo 处理 type。\n1$ cp themes/hugo-theme-bootstrap/archetypes/default.md archetypes/notes.md 然后在 archetypes/notes.md 中添加 type = \u0026quot;docs\u0026quot;。现在 hugo new notes/blah-blah-blah 将会复制 archetypes/notes.md 的内容到新的文章。\n同样地，你也可以为 posts、docs 等自定义原型。\nSections 模板 你可能还想在 notes 中使用和 docs 一样的列表布局。\n1{{ define \u0026#34;content\u0026#34; }} 2{{- partial \u0026#34;docs/catalog\u0026#34; . -}} 3\u0026lt;div class=\u0026#34;col-lg-7 ms-auto\u0026#34;\u0026gt; 4 {{ partial \u0026#34;docs/list\u0026#34; . }} 5\u0026lt;/div\u0026gt; 6{{- partial \u0026#34;docs/sidebar\u0026#34; . -}} 7{{ end }} 书写文章 假设默认语言为 en。\n1$ hugo new posts/new-post/index.md 上述命令创建了一篇英文文章，同样的，我们也可以创建一篇简体中文的文章：\n1$ hugo new posts/new-post/index.zh-cn.md 请注意：创建的文章一般处于草稿状态，本地预览时，hugo server 需要指定 -D 参数才能预览草稿文章。文章发布时，需要将 draft 改为 false，或者直接移除 draft 参数。\nSummary Selection Order If post.excerpt = \u0026quot;description\u0026quot; and description is not empty, then it\u0026rsquo;ll be used. Manual splitting via \u0026lt;!\u0026ndash;more\u0026ndash;\u0026gt;. If summary on front matter isn\u0026rsquo;t empty, then summary will be selected. The text of content will be cut off by post.excerptMaxLength and formatted in plain text or HTML when post.plainifyExcerpt = true. 1[post] 2 # excerpt = \u0026#34;description\u0026#34; 3 # excerptMaxLength = 120 4 # copyright = false # Whether to display copyright section on each post. 5 # plainifyExcerpt = false # Format excerpt in HTML if false. Thumbnail Selection Order The images on front matter are preferred. Page images resources that match the filename\u0026rsquo;s patterns: *feature*, *cover* and *thumbnail*. Such as posts/my-page/feature.png. The page images resources will be resized to several smaller versions to suit the users devices for saving the bandwidth.\n文章置顶 你可以通过在 front matter 设置 pinned 为 true 以置顶文章。\n1+++ 2title = \u0026#34;Pinned Post\u0026#34; 3pinned = true 4weight = 100 5+++ 如果有多个置顶文章，那么将按照 weight 进行降序排序。\n站点配置 1pinnedPost = false # 关闭文章置顶功能 2pinnedPostCount = 2 # 首页显示的置顶文章的数目 Carousel 将文章于 carousel 显示。\n1+++ 2carousel = true 3+++ 下一步 调整配置 菜单 观感 ","date":"2021-12-04","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/content/","series":["Docs"],"smallImg":"","tags":["Authoring","Articles"],"title":"添加内容"},{"categories":["配置"],"content":"如示例站点所示，我们使用 Configuration Directory 为了维护更简单的组织和特定于环境的设置，它在多语言站点上特别有用。\n站点配置 站点配置文件默认为 config/_default/config.toml。\n名称 类型 默认值 说明 title String - 站点标题 baseURL String - 站点 URL copyright String - 站点版权。{year} 占位符会被替换为当前年份。 defaultContentLanguage String en defaultContentLanguageInSubdir Boolean false paginate Integer 10 paginatePath String page enableRobotsTXT Boolean true disqusShortname String - Disqus shortname。 googleAnalytics String - Google Analytics. social Object - 社交链接 。 author Object - 作者小部件 。 请参阅 All Configuration Settings 。\n站点参数 站点参数文件默认为 config/_default/params.toml。\n名称 类型 默认值 说明 Page mainSections Array [\u0026quot;posts\u0026quot;] 主要的 sections titleCase Boolean false 标题首字母是否大写 titleSeparator String - 标题分隔符 backgroundImage Array [] 背景图，如：['/images/bg.png'], ['/images/bg-light.png', '/images/bg-dark.png']。 comment Boolean true 是否开启评论 toc Boolean true 是否开启目录 tocPosition String sidebar 可选值：sidebar 和 content，仅作用于 post 布局。 tocWordCount Integer 280 仅当文章的字数超过此值时，才会显示目录。 breadcrumb Boolean true 是否开启面包屑导航 breadcrumbDivider String / 面包屑导航分隔符 dateFormat String Jan 2, 2006 日期格式。 查阅 Hugo Date and Time Templating Reference 以获取详细信息。 poweredBy Boolean true 是否显示技术支持。 readingTime Boolean true 是否显示阅读时间 postDate Boolean true 是否显示发表日期 math Boolean false 是否开启 math。 diagram Boolean false 是否开启 diagram。 logo String/Boolean images/logo.webp Logo。设置为 false 以禁用 Logo。 brand String - Brand description String - 站点描述 keywords String - 站点关键词 color String - 颜色风格， light，dark 或者 dynamic（默认）。 palette String - 默认配色，清理 Cookie 后生效。 palettes Array ALL 可选配色，如需禁用此选项，可将其设为空值 []。 featuredPostCount Integer/Boolean 5 精选文章数，false 则隐藏。 recentPostCount Integer/Boolean 5 最近文章数，false 则隐藏。 relatedPostCount Integer/Boolean 5 相关文章数，false 则隐藏。 categoryCount Integer/Boolean 10 分类数，false 则隐藏。 tagCount Integer/Boolean 10 标签数，false 则隐藏。 seriesCount Integer/Boolean 10 专栏数，false 则隐藏。 taxonomyPaginate Integer 10 taxonomyPostCount Integer 3 分类的列表文章数，false 则隐藏。 taxonomySortingMethod String - 分类排序方式，默认以字母排序。可选值：popularity。 countTaxonomyPosts Boolean false 显示分类的文章总数。 sidebarTaxonomies Array [\u0026quot;series\u0026quot;, \u0026quot;categories\u0026quot;, \u0026quot;tags\u0026quot;] 侧边栏的分类。 fullWidth Boolean/Object false 是否全宽 fullWidth.{section} Boolean - 为特定的 section 定义全宽，如：posts, docs。 fixedHeader Boolean true 是否固定头部 reward Object - 打赏小部件 ，又称 Buy Me a Coffee 小部件。 share Object - 分享按钮 share.addThis String - AddThis pubid。 fontSize Object 字体大小 注释或删除此参数可以禁用字体大小切换器。 fontSize.small String .9rem 小字体 fontSize.extraSmall String .8rem 更小的字体 fontSize.large String 1.1rem 大字体 fontSize.extraLarge String 1.2rem 更大的字体 socialShare Boolean true 启用/禁用内置的分享按钮 searchBar Boolean true 启用/禁用搜索栏 Archive archive Object - 归档 。 search Object - 搜索 。 Webmaster Site Verification siteVerification Object - siteVerification.google String - Google siteVerification.bing String - Bing siteVerification.baidu String - 百度 siteVerification.baiduUnion String - 百度联盟 siteVerification.so String - 360 siteVerification.sogou String - 搜狗 siteVerification.shenma String - 神马 Analytics analytics Object - Analytics. analytics.baidu String - 百度统计 Others googleAdsense String - Google Adsense。 customCSS Array - 自定义 CSS， 主要用于导入外部。 请查阅自定义资源 。 customJS Array - 自定义 JS， 主要用于导入外部 JS。 请查阅自定义资源 。 utterances Object - Utterances 配置。 Creative Commons License creativeCommons Object - creativeCommons.by Boolean true 署名 creativeCommons.nc Boolean true 非商业 creativeCommons.nd Boolean true 禁止演绎 creativeCommons.sa Boolean true 相同方式共享 Code Block codeBlock Object - codeBlock.maxLines Integer 7 codeBlock.lineNos Boolean true true/false 表示默认情况下显示/隐藏行号。 Post post Object - post.excerpt String Summary 可选项：description post.excerptMaxLength Integer 320 post.copyright Boolean true 是否在每个帖子上显示版权部分 post.plainifyExcerpt Boolean true false 则格式化摘要为 HTML。 post.featuredImage Boolean false 于内容上方显示 Featured 图片。 post.numberifyHeadings Boolean false 是否自动对标题进行编号。 post.numberifyHeadingsEndLevel Number 6 自动编号的深度。 post.numberifyHeadingsSeparator String - 编号和标题之间的分隔符。 post.tocStyleType String none 目录的 list-style-type CSS 属性。 viewer Boolean true 图片查看器 pwa Object - 渐进式 web 应用 Sidebar sidebar Object - sidebar.fixed Boolean false 固定默认侧边栏。 sidebar.archive Boolean true 于侧边栏显示归档挂件。 Meta Tag metaRobots String - 空字符串表示禁用。 contact Object - 联系表单 pinnedPost Boolean true 开启/禁用文章置顶。 pinnedPostCount Integer 1 置顶的文章数量。 rss String/Boolean true 在社交链接中显示 RSS 链接。false 为不显示，home 则总是链接到主页。 除了 Google 站长工具外，其他搜索引擎站长工具无法与 hugo --minify 同时使用，这是因为它们无法识别优化后的元标签。\n页面参数 页面参数位于 Front Matter 。\n名称 类型 默认值 说明 Page description String - 页面描述 keywords Array - 页面关键词 comment Boolean true 是否开启评论，如果评论已被全局关闭，该参数无效 toc Boolean true 是否开启目录，如果目录已被全局关闭，该参数无效 math Boolean false 是否开启 math diagram Boolean false 是否开启 diagram reward Boolean true 是否开启打赏 breadcrumb Boolean true 是否开启面包屑导航 readingTime Boolean true 是否显示阅读时间 postDate Boolean true 是否显示发表日期 copyright Boolean true 是否显示版权部分 carousel Boolean false 是否在 Carousel 显示 Creative Commons License creativeCommons Object - creativeCommons.by Boolean true 署名 creativeCommons.nc Boolean true 非商业 creativeCommons.nd Boolean true 禁止演绎 creativeCommons.sa Boolean true 相同方式共享 Meta Tag metaRobots String - 空字符串表示禁用。 pinned Boolean false 置顶文章。 featuredPostCount Integer/Boolean 5 精选文章数，false 则隐藏。 recentPostCount Integer/Boolean 5 最近文章数，false 则隐藏。 relatedPostCount Integer/Boolean 5 相关文章数，false 则隐藏。 ","date":"2021-11-27","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/configuration/","series":["文档"],"smallImg":"","tags":[],"title":"配置"},{"categories":[],"content":"HBS(Hugo Bootstrap) 是一个快速、响应式和功能齐全的 Hugo 主题，可用于个人博客和文档。 在安装主题前，请确保你满足先决条件 。\n先决条件 Configuration 自 0.68.0，HBS 要求设置以下配置。\nconfig. toml yaml json 1[build] 2 writeStats = true 1build: 2 writeStats: true 1{ 2 \u0026#34;build\u0026#34;: { 3 \u0026#34;writeStats\u0026#34;: true 4 } 5} 构建工具 Git 。 Hugo ：extended 0.84.0 版本或以上。 npm ：用于安装 CSS 和 JS 依赖。 Go : 1.12 版本或以上，仅当安装为 Hugo Module 时必须。 我们建议使用这些工具的最新版本。\n安装方法 Install via Starter Template : Recommended. Install via Git Submodule . Install via Hugo Module . 下一步 调整配置 菜单 观感 添加内容 ","date":"2021-12-04","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/getting-started/","series":["Docs"],"smallImg":"","tags":["Installation","Prerequisites"],"title":"快速入门"},{"categories":["问题排查"],"content":"本文列出了一些常见问题，以便你可以轻松解决它们。\nCSS rendering incorrectly The problem probably due to the postcss, HBS need the following configuration to be set up, postcss rely on the file hugo_stats.json for purging unused CSS.\n1[build] 2 writeStats = true js.Build: Could not resolve dependencies 1Start building sites … 2hugo v0.94.0-63B23660+extended linux/amd64 BuildDate=2022-03-10T09:46:36Z VendorInfo=gohugoio 3ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/offcanvas\u0026#34; 4ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/modal\u0026#34; 5ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/tab\u0026#34; 6ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/collapse/collapse.ts:1:38\u0026#34;: Could not resolve \u0026#34;bootstrap/js/src/collapse\u0026#34; 7ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/toc/index.ts:1:27\u0026#34;: Could not resolve \u0026#34;bootstrap/js/dist/offcanvas\u0026#34; 8ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;@fortawesome/free-solid-svg-icons\u0026#34; 9ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;@fortawesome/free-regular-svg-icons\u0026#34; 10ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;@fortawesome/free-brands-svg-icons\u0026#34; 11ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;workbox-routing\u0026#34; 12ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;workbox-strategies\u0026#34; 13ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;workbox-cacheable-response\u0026#34; 14ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;workbox-expiration\u0026#34; 15ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;workbox-precaching\u0026#34; 16ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/search/search.ts:1:21\u0026#34;: Could not resolve \u0026#34;mustache\u0026#34; 17ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/search/search.ts:1:17\u0026#34;: Could not resolve \u0026#34;mark.js/dist/mark.js\u0026#34; 18ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/offcanvas\u0026#34; 19ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/modal\u0026#34; 20ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/tab\u0026#34; 21ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/collapse/collapse.ts:1:38\u0026#34;: Could not resolve \u0026#34;bootstrap/js/src/collapse\u0026#34; 22ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/toc/index.ts:1:27\u0026#34;: Could not resolve \u0026#34;bootstrap/js/dist/offcanvas\u0026#34; 23ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/offcanvas\u0026#34; 24ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/modal\u0026#34; 25ERROR 2022/03/19 14:03:50 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/tab\u0026#34; 26ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/collapse/collapse.ts:1:38\u0026#34;: Could not resolve \u0026#34;bootstrap/js/src/collapse\u0026#34; 27ERROR 2022/03/19 14:03:50 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/toc/index.ts:1:27\u0026#34;: Could not resolve \u0026#34;bootstrap/js/dist/offcanvas\u0026#34; 28ERROR 2022/03/19 14:03:51 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/offcanvas\u0026#34; 29ERROR 2022/03/19 14:03:51 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/modal\u0026#34; 30ERROR 2022/03/19 14:03:51 js.Build failed: Could not resolve \u0026#34;bootstrap/js/src/tab\u0026#34; 31ERROR 2022/03/19 14:03:51 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/collapse/collapse.ts:1:38\u0026#34;: Could not resolve \u0026#34;bootstrap/js/src/collapse\u0026#34; 32ERROR 2022/03/19 14:03:51 js.Build failed: \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/js/toc/index.ts:1:27\u0026#34;: Could not resolve \u0026#34;bootstrap/js/dist/offcanvas\u0026#34; 33ERROR 2022/03/19 14:03:51 TOCSS: failed to transform \u0026#34;viewer/scss/index.scss\u0026#34; (text/x-scss): SCSS processing failed: file \u0026#34;stdin\u0026#34;, line 1, col 1: File to import not found or unreadable: viewerjs/dist/viewer. 34ERROR 2022/03/19 14:03:51 JSBUILD: failed to transform \u0026#34;main/js/bundle.ts\u0026#34; (application/typescript): Could not resolve \u0026#34;bootstrap/js/src/dropdown\u0026#34; 35ERROR 2022/03/19 14:03:51 JSBUILD: failed to transform \u0026#34;icons/index.js\u0026#34; (application/javascript): Could not resolve \u0026#34;@fortawesome/fontawesome-svg-core\u0026#34; 36ERROR 2022/03/19 14:03:51 JSBUILD: failed to transform \u0026#34;service-worker/bundle.ts\u0026#34; (application/typescript): Could not resolve \u0026#34;workbox-core\u0026#34; 37ERROR 2022/03/19 14:03:51 JSBUILD: failed to transform \u0026#34;viewer/js/index.ts\u0026#34; (application/typescript): Could not resolve \u0026#34;viewerjs\u0026#34; 38Error: Error building site: JSBUILD: failed to transform \u0026#34;search/index.ts\u0026#34; (application/typescript): \u0026#34;/home/razonyang/Projects/razonyang/hugo-theme-bootstrap/assets/search/search.ts:1:17\u0026#34;: Could not resolve \u0026#34;fuse.js\u0026#34; It is due to the lack of CSS and JS dependencies:\n1$ hugo mod npm pack 2$ npm install 3$ hugo server ","date":"2022-03-19","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/troubleshooting/","series":[],"smallImg":"","tags":[],"title":"问题排查"},{"categories":["FAQ"],"content":"FAQ 页面是一个常见问题的集合。\n前置条件 我们需要在 content 目录下创建一个名为 faq/index.md 的页面。\n1+++ 2title = \u0026#34;Frequently Asked Questions\u0026#34; 3layout = \u0026#34;faq\u0026#34; 4+++ 数据 数据存放在 data 目录，其目录结构如下：\n1data 2 /en 3 /faq 4 foo.json 5 bar.json 6 /zh-cn 7 /faq 8 foo.json 9 bar.json 如你所看到的，我们按照语言对问题进行归类。每个文件代表一组问题，它们有着以下相同的格式：\n1{ 2 \u0026#34;title\u0026#34;: \u0026#34;The group title\u0026#34;, 3 \u0026#34;weight\u0026#34;: 1, 4 \u0026#34;questions\u0026#34;: [ 5 { 6 \u0026#34;question\u0026#34;: \u0026#34;The question\u0026#34;, 7 \u0026#34;answer\u0026#34;: \u0026#34;The answer\u0026#34; 8 } 9 ] 10} weight 参数用于将组按升序排序。 ","date":"2021-12-07","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/layouts/faq/","series":["文档"],"smallImg":"","tags":[],"title":"FAQ 页面"},{"categories":["图片查看器"],"content":"Image viewer is an image gallery, it will be shown up when you click a non-linkable image.\nIt also provides many tools, such as zoom in, zoom out and rotate.\nThe author avatar was filtered by default.\nSite Parameters Image Viewer was turned on by default, you can turn it off by setting the parameter viewer as false.\nOptions You can tweak the options by creating assets/viewer/js/options.ts.\n1const options = { 2 className: \u0026#34;image-viewer\u0026#34;, 3 // ... 4}; 5export default options; 1 2Avialable options are listed on [Viewer.js Options](https://github.com/fengyuanchen/viewerjs#options). ","date":"2021-12-03","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/image-viewer/","series":["文档"],"smallImg":"","tags":[],"title":"图片查看器"},{"categories":["PWA"],"content":"PWAs(渐进式 web 应用程序 ) 是使用一些特定的技术和标准模式开发的，允许它们同时利用 web 和本机应用程序功能。\n我们正处于 PWA 的实验阶段，但添加了一些主要功能，如将站点安装到主屏幕、预缓存文件和离线可用。\n站点配置 首先，我们需要指定 pwa 参数，即使为空。\n名称 类型 默认值 描述 pwa Object - pwa.manifest Object - Web app manifest pwa.manifest.name String - 默认为站点标题 pwa.manifest.short_name String - 站点短名称 pwa.manifest.display String standalone pwa.manifest.description String - 默认为站点描述 pwa.manifest.theme_color String - pwa.manifest.background_color String - pwa.manifest.icons Array - pwa.manifest.icons.sizes String - 图标尺寸，如：\u0026ldquo;96x96\u0026rdquo; pwa.manifest.icons.src String - 图标 URL Manifest 接着，我们在配置文件中添加一个名为 MANIFEST 的自定义输出格式，以便让我们的站点可安装。\n1[mediaTypes] 2 [mediaTypes.\u0026#34;application/manifest+json\u0026#34;] 3 suffixes = [\u0026#34;json\u0026#34;] 4 5[outputFormats] 6 [outputFormats.MANIFEST] 7 name = \u0026#34;manifest\u0026#34; 8 baseName = \u0026#34;manifest\u0026#34; 9 mediaType = \u0026#34;application/manifest+json\u0026#34; 然后在 home 输出追加 MANIFEST。\n1[outputs] 2 home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;, \u0026#34;MANIFEST\u0026#34;] Hugo 会在站点根目录生成 manifest.json。\n离线 如果在没有网络的情况下请求新页面，将显示脱机页面。\n我们需要在 content 目录中创建一个名为 offline/index.md 的脱机页面，其首要内容如下。\n1+++ 2title = \u0026#39;Offline\u0026#39; 3layout = \u0026#39;offline\u0026#39; 4+++ 预载 目前，我们还没有提供任何预缓存自定义文件的方法。 如果您需要此功能，请随时通知我们。\n","date":"2021-12-03","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/pwa/","series":["文档"],"smallImg":"","tags":["Manifest","离线","预载"],"title":"渐进式 Web 应用程序"},{"categories":["归档"],"content":"归档页面按照年份对文章进行归档。\n前置条件 我們需要在 content 目錄下創建一個名為 archives/_ index.md 的檔案。\n1+++ 2title = \u0026#34;归档\u0026#34; 3layout = \u0026#34;archive\u0026#34; 4+++ Site Parameters 名称 类型 默认值 描述 archive Object - Archive. archive.paginate Integer 100 Archive pagination. archive.dateFormat Integer Jan 2 Archive date format. ","date":"2021-12-03","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/layouts/archives/","series":["文档"],"smallImg":"","tags":[],"title":"归档页面"},{"categories":["搜索"],"content":"如果您的站点中有许多文章，读者可能很难检索到文章，因此，我们添加了搜索功能。\n前置条件 首先，我们需要在配置文件的 home 输出格式中追加 JSON。\n1[outputs] 2 home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] 此步骤生成一个索引文件 index.json，以便 JavaScript 可以检索内容。\n然后，在 content 目录下创建一个名为 search/_index.md 的页面。\n1+++ 2title = \u0026#34;Search\u0026#34; 3layout = \u0026#34;search\u0026#34; 4+++ 站点参数 名称 类型 默认值 描述 search Object - 搜索配置。 search.paginate Integer 10 分页。 search.resultContentWordCount Integer 240 搜索结果内容最大字数。 search.fuse Object - Fuse.js 参数 search.fuse.ignoreLocation Boolean true search.fuse.location Integer - search.fuse.isCaseSensitive Boolean - search.fuse.minMatchCharLength Integer - search.fuse.threshold Double - search.fuse.distance Integer - search.fuse.useExtendedSearch Boolean - ","date":"2021-12-03","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/layouts/search/","series":["文档"],"smallImg":"","tags":[],"title":"搜索页面"},{"categories":["小部件"],"content":"作者小部件位于侧边栏，用于简要地自我介绍。\n站点配置 默认地，配置文件位于 config/_default/author.toml。 你可以通过移除 author 配置禁用小部件。\n名称 类型 默认值 描述 author Object - 个人档案。 author.name String - 名称。 author.avatar String images/profile.webp 头像。 author.bio String - 简介。 author.company String - 公司。 author.location String - 地理位置。 author.about String - “关于我”的外部页面，如果未设置，则使用内部的“关于我”的页面。 author.params Object - author.params.layout String - 可选值：compact。 author.social Object - 社交链接 。 ","date":"2021-12-03","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/widgets/author/","series":["文档"],"smallImg":"","tags":[],"title":"作者小部件"},{"categories":["小部件"],"content":"打赏小部件，又称 buy me a coffee 小部件，其通过使用捐赠或小费，为读者提供了一种支持创作者的管道。\n站点配置 reward 参数是从平台映射到二维码图像的键值对，因此支持任何支持二维码的平台。\n名称 类型 默认值 描述 reward Object - 打赏。 reward.alipay String - 支付宝收款二维码图片。 reward.wechat String - 微信收款/打赏二维码图片。 页面配置 名称 类型 默认值 描述 reward Boolean true 是否开启打赏 ","date":"2021-12-03","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/widgets/reward/","series":["文档"],"smallImg":"","tags":[],"title":"打赏小部件"},{"categories":["社交链接"],"content":"社交链接 social 参数是一组平台映射到用户标识的键值对。 其支持很多热门的社交平台，比如 Twitter、Facebook、Reddit、GitHub。 本文列出了所有受支持的平台，及其使用方法。\n使用方法 一共有两处地方可以放置社交链接，一个是作者小部件 ，另一个是页脚。\n作者小部件 编辑 config/_default/author.toml 文件，并填写以下配置：\n1[social] 2 email = \u0026#34;user@domain.tld\u0026#34; 3 github = \u0026#34;githubusername\u0026#34; 页脚 创建 config/_default/social.toml 文件，并填写以下配置：\n1email = \u0026#34;user@domain.tld\u0026#34; 2github = \u0026#34;githubusername\u0026#34; 平台 平台 用户标识 email 电子邮箱 facebook Facebook 用户名 facebookgroup Facebook 群组名 github GitHub 用户名 gitlab GitLab 用户名 instagram Instagram 用户名 linkedin LinkedIn 用户名 quora Quora 用户名 stackoverflow Stack Overflow 用户 ID tumblr Tumblr 用户名 twitter Twitter 用户名 weibo 微博用户名 zhihu 知乎用户名 reddit Reddit 用户名 telegram Telegram 用户名 qq QQ 号 dockerhub Docker Hub 用户名 bitbucket Bitbucket Workspace ID kaggle Kaggle 用户名 medium Medium 用户名或自定义域名（比如：https://custom.domain.tld） lastfm Last.fm 用户名 bibibili BiliBili 用户 ID youtube Youtube 频道 ID discord Discord 邀请码 discourse 论坛 URL tiktok TikTok 用户名 pinterest Pinterest 用户名 mastodon Mastodon 用户名 liberapay Liberapay 用户名 paypal Paypal 用户名 patreon Patreon 用户名 tipeee Tipeee 用户名 rss 空字符串以禁用 RSS 链接 ","date":"2021-12-02","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/widgets/social-links/","series":["文档"],"smallImg":"","tags":[],"title":"社交链接"},{"categories":["联系表单"],"content":"我们可以将邮件地址放在 社交链接 上，以便读者联系我们。但不幸的是，邮件或多或少会被当成垃圾邮件，甚至被过滤。因此我们带来了一个联系表单的功能。\n前置条件 我们需要在 content 目录创建一个名为 contact/index.md 的页面，以至于我们可以访问联系表单页面。\n1+++ 2title = \u0026#34;Contact Us\u0026#34; 3layout = \u0026#34;contact\u0026#34; 4+++ 一旦创建，链接将出现在简介小部件中。\n参数 名称 类型 默认值 说明 contact Object - contact.endpoint String - 请参阅 后端 。 contact.file Boolean false 开启/禁用文件上传。 contact.fileField String - 文件字段名称。 后端 其被设计成可以兼容大部分后端，比如：Netlify form 、Getform 和 Formspree 。\nNetlify Netlify form 可开箱即用，因此，你无需指定 contact.endpoint 参数。\n演示站点使用 Getform 而不是 Netlify form，因为当你超过当前套餐限定时， Netlify 会自动升级你的套餐，这会导致额外的支出。\n如果你打算使用 Netlify form，请确保 contact.endpoint 参数为空。\n其他 我们以 Getform 为例：\n1[contact] 2 endpoint = \u0026#34;YOUR_ENDPOINT\u0026#34; ","date":"2021-11-30","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/layouts/contact-form/","series":["文档"],"smallImg":"","tags":["Netlify","Getform"],"title":"联系表单"},{"categories":["资源"],"content":"作为一个可定制的主题，其提供了定制资源的能力，无论是定制 CSS 和 JS，还是引入第三方 CSS 和 JS。\n内部资源 你只需要创建和編輯 assets/main/scss/_variables.scss，assets/main/scss/_custom.scss 和 assets/main/js/custom.ts 即可。\n这些文件会被打包成单个 CSS/JS 文件，以减少 HTTP 的请求次数。\n外部资源 任意的 CSS 和 JS 资源都可以通过 customCSS 和 customJS 参数进行引入。\n1customCSS = [ 2 \u0026#34;external-foo.css\u0026#34;, 3 \u0026#34;external-bar.css\u0026#34; 4] 5 6customJS = [ 7 \u0026#34;external-foo.js\u0026#34;, 8 \u0026#34;external-bar.js\u0026#34; 9] ","date":"2021-11-28","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/custom-assets/","series":["文档"],"smallImg":"","tags":["CSS","JS"],"title":"自定义资源"},{"categories":["钩子"],"content":"作为一个灵活的主题，它应该能够自定义代码和集成第三方服务。因此，我们带来了一个叫做钩子的特性。\n在本文中，我们将介绍所有钩子并提供一些用例。\n总览 钩子 描述 head-end \u0026lt;head\u0026gt; 结束之前 body-end \u0026lt;body\u0026gt; 结束之前 main-begin \u0026lt;main\u0026gt; 上方 main-end \u0026lt;main\u0026gt; 下方 list-begin 文章列表上方 list-end 文章列表下方 sidebar-begin 侧边栏上方 sidebar-end 侧边栏下方 content-begin 文章内容上方 content-end 文章内容下方 comments-begin 评论上方 comments-end 评论下方 footer-begin footer 上方 footer-end footer 下方 post-panel-begin 文章工具栏上方 post-panel-end 文章工具栏下方 docs/sidebar-begin 文档侧边栏上方 docs/sidebar-end 文档侧边栏下方 用法 使用钩子很容易，你需要做的是在 layouts/partials/hooks 目录中创建一个与钩子同名的 HTML 文件。\n以 sidebar-begin 为例：\n1echo \u0026#39;\u0026lt;section class=\u0026#34;row card component text-center\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;card-body\u0026#34;\u0026gt;SIDEBAR BEGIN\u0026lt;/div\u0026gt;\u0026lt;/section\u0026gt;\u0026#39; \\ 2 \u0026gt; layouts/partials/hooks/sidebar-begin.html ","date":"2021-11-27","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/hooks/","series":["文档"],"smallImg":"","tags":[],"title":"钩子"},{"categories":[],"content":"我们很乐意倾听你的意见和反馈，也欢迎你参与进来。\n社区 特性请求 Bug 反馈 讨论 : 提问题、分享想法等。 贡献 欢迎任何贡献，如文档、Bug 修复和新功能。\n规则 鉴于易于维护的考虑，我们制定了一些规则。\nConventional Commits Specification 请遵循 Conventional Commits Specification 。\n比如：\nBug 修复：fix: correct typos 新特性：feat: add the foobar parameter 文档：docs: document the foobar parameter 样式：style: change the background color to blue 重建资源：chore: rebuild assets 开发 本主题依赖 npm 和 webpack，用于生成资源文件：JS、CSS、字体等。\n其源码放在 src 目录。\n安装依赖 1$ npm install 重建资源 1$ npm run build npm run watch 会在文件改动时重建资源。\n预览 1$ npm run serve ","date":"2021-11-27","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/get-involved/","series":["文档"],"smallImg":"","tags":[],"title":"参与我们"},{"categories":["评论","小部件"],"content":"Disqus 和 Utterances 评论小部件都是开箱即用的。本文将展示如何配置它们，甚至自定义你自己的评论小部件。\nDisqus Disqus 评论小部件由 Hugo 提供支持。\n1disqusShortname = \u0026#34;yourdiscussshortname\u0026#34; 请注意：disqusShortname 是站点配置，而非参数。将其放在 params 是行不通的。\nUtterances Utterances 是一个基于 GitHub issue 的轻量级的评论挂件。\n1[utterances] 2 repo = \u0026#34;user/repo\u0026#34; 3 #issueTerm = \u0026#34;pathname\u0026#34; # pathname, url, title, og:title. 4 #label = \u0026#34;comment\u0026#34; # Optional. 5 #theme = \u0026#34;\u0026#34; 不同于 Disqus，Utterances 是一个参数。请将其放置在 params。\n参数 名称 类型 默认值 描述 utterances.repo String - GitHub 仓库。 utterances.issueTerm String pathname 文章和 issue 之间的映射： pathname utterances.label String - 此标签将会分配给 Utterances 创建的 issue。 utterances.theme String - 如果未设置任何主题，亮色和暗色模式会分别使用 github-light 和 github-dark。 可选值： github-light, github-dark, preferred-color-scheme, github-dark-orange, icy-dark, dark-blue 和 photon-dark。 故障排查 确保仓库是公开的，否则读者无法查看评论。 确保仓库已经安装了 utterances app ，否则用户无法发表评论。 如果你的仓库是克隆的，请在设置中确保已经启用了 issues 功能。 自定义评论小部件 我们不打算支持所有的评论小部件，但别担心，你完全可以自定义评论小部件。\n在创建自己的评论小部件之前，需要禁用其他评论小部件。\n1mkdir -p layouts/partials/post/comments 2echo \u0026#34;MY COMMENTS WIDGET\u0026#34; \u0026gt; layouts/partials/post/comments/custom.html 期间，你很可能需要引入第三方资源，不过这可以通过 自定义资源 或 钩子 轻松解决。\n","date":"2021-11-27","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/widgets/comments/","series":["文档"],"smallImg":"","tags":["Disqus","Utterances"],"title":"评论小部件"},{"categories":["Markdown"],"content":"本文提供一些调整图片大小和对齐图片的用例。\n调整图片大小 我们利用 URL 的查询字符串来调整图片大小。\n指定宽度和保留比率 1![Resize](featured-sample.png?width=300px) 指定高度和保留比率 1![Resize](featured-sample.png?height=200px) 指定宽度和高度 1![Resize](featured-sample.png?width=300px\u0026amp;height=200px) 它不仅可以用于页面资源 ，而且也适用于 static 图像和外部图像。 但是，除了页面资源外，其他资源的大小都是按内联样式调整的，也就是说，它们的原始大小不会改变。\n对齐图像 我们可以利用 URL 片段轻易地对齐图像，比如：#center, #floatleft 和 #floatright 分别表示居中对齐、向左浮动和向右浮动。\n居中对齐 添加 #center 使图片居中对齐。\n举个例子：![Center](/center.png#center)。\n向左浮动 添加 #floatleft 使图片向左浮动。\n举个例子：![Float Left](/featured-sample.png#floatleft)。\n向右浮动 同样的，我们也可以添加 #floatright 使图片向右浮动。\n举个例子：![Float Right](/featured-sample.png#floatright)。\n","date":"2021-08-15","img":"http://brucehou.gitee.io/our_note/zh-cn/docs/image-processing/featured-sample.png","largeImg":"http://brucehou.gitee.io/our_note/zh-cn/docs/image-processing/featured-sample_hu36a1c241573018d26a3b42abe3e7bd07_12103_500x0_resize_box_3.png","permalink":"http://brucehou.gitee.io/our_note/zh-cn/docs/image-processing/","series":["文档"],"smallImg":"http://brucehou.gitee.io/our_note/zh-cn/docs/image-processing/featured-sample_hu36a1c241573018d26a3b42abe3e7bd07_12103_180x0_resize_box_3.png","tags":["图像"],"title":"图像处理"},{"categories":[],"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code Code Blocks Code block with backticks 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1\u0026lt;!doctype html\u0026gt; 2\u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; 3\u0026lt;head\u0026gt; 4 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; 5 \u0026lt;title\u0026gt;Another Example HTML5 Document\u0026lt;/title\u0026gt; 6\u0026lt;/head\u0026gt; 7\u0026lt;body\u0026gt; 8 \u0026lt;p\u0026gt;A looooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong text\u0026lt;/p\u0026gt; 9\u0026lt;/body\u0026gt; 10\u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested List Fruit Apple Orange Banana Dairy Milk Cheese TODO List Done WIP Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2020-11-09","img":"http://brucehou.gitee.io/our_note/images/markdown.png","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/posts/markdown-syntax/","series":["文档"],"smallImg":"","tags":["Markdown","CSS","HTML"],"title":"Markdown 语法指南"},{"categories":null,"content":"","date":"0001-01-01","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/offline/","series":null,"smallImg":"","tags":null,"title":"Offline"},{"categories":null,"content":"","date":"0001-01-01","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/faq/","series":null,"smallImg":"","tags":null,"title":"常见问题"},{"categories":null,"content":"","date":"0001-01-01","img":"","largeImg":"","permalink":"http://brucehou.gitee.io/our_note/zh-cn/contact/","series":null,"smallImg":"","tags":null,"title":"联系我们"}]